<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	
	<!-- JDBC -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 注入dao和service -->
	<context:component-scan base-package="com.margin.dream.service" />
	<context:component-scan base-package="com.margin.dream.dao" />
	
	<!-- 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.drivername}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 连接池中保留的最大连接数 -->
		<property name="maxPoolSize" value="${c3p0.pool.max}" />
		<!-- 连接池中保留的最小连接数 -->
		<property name="minPoolSize" value="${c3p0.pool.min}" />
		<!-- 初始化连接池中的连接数 -->
		<property name="initialPoolSize" value="${c3p0.pool.init}" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数 -->
		<property name="acquireIncrement" value="${c3p0.pool.increment}" />
		<!--每60秒检查所有连接池中的空闲连接 -->   
         <property name="idleConnectionTestPeriod" value="${c3p0.pool.connperiod}" />  
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<!-- 将mybatis映射的mapper进行自动扫描，并且加入到spring的容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--可用,或者;分割多个扫描的包 -->
		<property name="basePackage"
			value="com.margin.dream.dao" />
	</bean>


	<!-- 基于注解的事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>